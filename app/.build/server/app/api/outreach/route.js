"use strict";(()=>{var e={};e.id=522,e.ids=[522],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},44802:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>v,patchFetch:()=>w,requestAsyncStorage:()=>x,routeModule:()=>h,serverHooks:()=>g,staticGenerationAsyncStorage:()=>y});var s={};r.r(s),r.d(s,{GET:()=>d,POST:()=>m,dynamic:()=>l});var a=r(49303),o=r(88716),i=r(60670),n=r(87070),c=r(45609),u=r(90455),p=r(9487);let l="force-dynamic";async function d(e){try{if(!await (0,c.getServerSession)(u.L))return n.NextResponse.json({error:"Unauthorized"},{status:401});let e=await p._.outreachActivity.findMany({include:{prospect:{select:{businessName:!0,contactName:!0}}},orderBy:{createdAt:"desc"}}),t=e?.map(e=>({id:e?.id,type:e?.type,prospectId:e?.prospectId,prospectName:e?.prospect?.contactName||"Unknown",businessName:e?.prospect?.businessName||"Unknown Business",subject:e?.subject,content:e?.content,status:e?.status,scheduledAt:e?.scheduledAt?.toISOString(),completedAt:e?.completedAt?.toISOString(),createdBy:e?.userId,createdAt:e?.createdAt?.toISOString()}))||[];return n.NextResponse.json({activities:t})}catch(e){return console.error("Error fetching outreach activities:",e),n.NextResponse.json({error:"Failed to fetch outreach activities"},{status:500})}}async function m(e){try{let t=await (0,c.getServerSession)(u.L);if(!t)return n.NextResponse.json({error:"Unauthorized"},{status:401});let r=await e.json(),s=await p._.outreachActivity.create({data:{...r,createdBy:t.user?.email||"system"}});return n.NextResponse.json({activity:s},{status:201})}catch(e){return console.error("Error creating outreach activity:",e),n.NextResponse.json({error:"Failed to create outreach activity"},{status:500})}}let h=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/outreach/route",pathname:"/api/outreach",filename:"route",bundlePath:"app/api/outreach/route"},resolvedPagePath:"/home/ubuntu/ccc_healthcare_pipeline/app/app/api/outreach/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:x,staticGenerationAsyncStorage:y,serverHooks:g}=h,v="/api/outreach/route";function w(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:y})}},90455:(e,t,r)=>{r.d(t,{L:()=>c});var s=r(53797),a=r(13539),o=r(9487),i=r(42023),n=r.n(i);let c={adapter:(0,a.N)(o._),providers:[(0,s.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Missing credentials");let t=await o._.user.findUnique({where:{email:e.email}});if(!t?.password||!await n().compare(e.password,t.password))throw Error("Invalid credentials");return{id:t.id,email:t.email,name:t.name,role:t.role}}})],session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:t})=>(t&&(e.role=t.role),e),session:async({session:e,token:t})=>(t&&(e.user.id=t.sub,e.user.role=t.role),e)},pages:{signIn:"/auth/signin"},secret:process.env.NEXTAUTH_SECRET}},9487:(e,t,r)=>{r.d(t,{_:()=>a});var s=r(53524);let a=globalThis.prisma??new s.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[276,972,23,184],()=>r(44802));module.exports=s})();