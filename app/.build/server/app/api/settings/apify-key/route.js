"use strict";(()=>{var e={};e.id=37,e.ids=[37],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},92048:e=>{e.exports=require("fs")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},19801:e=>{e.exports=require("os")},55315:e=>{e.exports=require("path")},76162:e=>{e.exports=require("stream")},74175:e=>{e.exports=require("tty")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},70612:e=>{e.exports=require("node:os")},47261:e=>{e.exports=require("node:util")},65628:e=>{e.exports=require("node:zlib")},11421:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>w,patchFetch:()=>A,requestAsyncStorage:()=>k,routeModule:()=>I,serverHooks:()=>v,staticGenerationAsyncStorage:()=>q});var s={};t.r(s),t.d(s,{DELETE:()=>h,GET:()=>m,POST:()=>x});var a=t(49303),i=t(88716),n=t(60670),o=t(87070),u=t(53524),p=t(47291),l=t(84770),c=t.n(l),y=t(1313);let d=new u.PrismaClient,f=process.env.ENCRYPTION_KEY||"default-key-replace-in-production-32chars";async function m(e){try{let e=await (0,y.vz)(),r=await d.user.findUnique({where:{email:e},select:{apifyKeyStatus:!0,apifyKeyLastTested:!0}});if(!r)return o.NextResponse.json({error:"User not found"},{status:404});return o.NextResponse.json({status:r.apifyKeyStatus,lastTested:r.apifyKeyLastTested,hasKey:"NOT_CONFIGURED"!==r.apifyKeyStatus})}catch(e){return console.error("Error fetching API key status:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}async function x(e){try{let{apiKey:r}=await e.json();if(!r||"string"!=typeof r)return o.NextResponse.json({error:"API key is required"},{status:400});if(!r.startsWith("apify_api_"))return o.NextResponse.json({error:'Invalid API key format. Apify API keys should start with "apify_api_"'},{status:400});let t=await g(r),s=function(e){let r=c().createCipher("aes-256-cbc",f),t=r.update(e,"utf8","hex");return t+=r.final("hex")}(r),a=await (0,y.vz)();return await d.user.update({where:{email:a},data:{apifyApiKey:s,apifyKeyStatus:t.isValid?"VALID":"INVALID",apifyKeyLastTested:new Date}}),o.NextResponse.json({success:!0,status:t.isValid?"VALID":"INVALID",message:t.message})}catch(e){return console.error("Error saving API key:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}async function h(e){try{let e=await (0,y.vz)();return await d.user.update({where:{email:e},data:{apifyApiKey:null,apifyKeyStatus:"NOT_CONFIGURED",apifyKeyLastTested:null}}),o.NextResponse.json({success:!0})}catch(e){return console.error("Error removing API key:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}async function g(e){try{let r=new p.wR({token:e}),t=await r.user().get();if(t?.id)return{isValid:!0,message:`API key is valid. Connected to account: ${t.username||t.email||"Unknown"}`};return{isValid:!1,message:"API key test failed - no user information returned"}}catch(e){if(console.error("API key test error:",e),e?.message?.includes("401")||e?.message?.includes("Unauthorized"))return{isValid:!1,message:"Invalid API key - authentication failed"};return{isValid:!1,message:`API key test failed: ${e?.message||"Unknown error"}`}}}let I=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/settings/apify-key/route",pathname:"/api/settings/apify-key",filename:"route",bundlePath:"app/api/settings/apify-key/route"},resolvedPagePath:"/home/ubuntu/ccc_healthcare_pipeline/app/app/api/settings/apify-key/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:k,staticGenerationAsyncStorage:q,serverHooks:v}=I,w="/api/settings/apify-key/route";function A(){return(0,n.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:q})}},1313:(e,r,t)=>{t.d(r,{vz:()=>a});let s=new(t(53524)).PrismaClient;async function a(){try{let e=await s.user.findFirst({select:{email:!0},orderBy:{createdAt:"asc"}});return e?.email||"john@doe.com"}catch(e){return console.error("Error fetching current user email:",e),"john@doe.com"}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[276,972,291],()=>t(11421));module.exports=s})();